---
- hosts: server
  tasks:

    - name: Create a new EC2 key
      ec2_key:
          name: AWS-Ansible
          region: eu-west-2
      register: ec2_key_result
 
    - name: Save private key
      copy: content="{{ ec2_key_result.key.private_key }}" dest="./key.pem" mode=0600
      when: ec2_key_result.changed

    - name: Setting up the Security Group for new instance
      ec2_group:
          name: Ansible_Security_Group_AWS
          description: Allowing Traffic on port 1337  and 80 and 443
          region: eu-west-2     
          rules:
           - proto: tcp
             from_port: 80
             to_port: 80
             cidr_ip: 0.0.0.0/0

           - proto: tcp
             from_port: 443
             to_port: 443
             cidr_ip: 0.0.0.0/0


           - proto: tcp
             from_port: 1337
             to_port: 1337
             cidr_ip: 0.0.0.0/0

           - proto: icmp
             from_port: -1
             to_port: -1
             cidr_ip: 0.0.0.0/0
          rules_egress:
           - proto: all
             cidr_ip: 0.0.0.0/0
          vpc_id: vpc-0fe6b4ef5ccaa93d1

    - name: Provision EC2 instance
      ec2:
         key_name: AWS-Ansible
         region: eu-west-2      
         instance_type: t2.micro
         user_data: |
                    #!/bin/bash
                    sudo sed -i "s/#Port 22/Port 1337/" /etc/ssh/sshd_config
                    #sudo sed -i '/PermitRootLogin/s/^#//g' /etc/ssh/sshd_config
                    sudo sed -i 's/#\?\(PasswordAuthentication\s*\).*$/\1 no/' /etc/ssh/sshd_config
                    sudo systemctl restart  sshd 
         image: ami-0d37e07bd4ff37148 
         wait: yes
         wait_timeout: 500
         count: 1
         instance_tags:
            Name: AWS-Ansible
         volumes:
            - device_name: /dev/xvda
              volume_type: gp2
              volume_size: 8
         monitoring: yes
         vpc_subnet_id: subnet-0270c1406e8f5384b        
         assign_public_ip: yes
         group: Ansible_Security_Group_AWS
      register: ec2

    - name: Wait for SSH to come up
      wait_for:
          host: "{{ item.public_dns_name }}"
          port: 1337
          delay: 60
          timeout: 320
          state: started
      with_items: "{{ ec2.instances }}"
